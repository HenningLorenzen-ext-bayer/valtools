% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/config.R
\name{vt_use_validation_config}
\alias{vt_use_validation_config}
\alias{vt_user}
\alias{vt_add_user_to_config}
\alias{vt_drop_user_from_config}
\alias{vt_get_user_info}
\alias{vt_add_file_to_config}
\alias{vt_drop_file_from_config}
\title{Validation Config}
\usage{
vt_use_validation_config(
  pkg = ".",
  working_dir = "vignettes",
  output_dir = "inst",
  report_naming_format = "Validation_Report_{package}_v{version}_{date}",
  username_list = list(),
  validation_files = list(),
  ...,
  overwrite = FALSE
)

vt_user(username, name, title, role, ...)

vt_add_user_to_config(
  username = whoami::username(),
  name,
  title,
  role,
  pkg = "."
)

vt_drop_user_from_config(username, pkg = ".")

vt_get_user_info(username, type = c("name", "title", "role"), pkg = ".")

vt_add_file_to_config(filename, pkg = ".")

vt_drop_file_from_config(filename, pkg = ".")
}
\arguments{
\item{pkg}{where to write config file}

\item{working_dir}{\link{character} which directory to be have working validation
contents that are used interactively}

\item{output_dir}{\link{character} which folder should the contents for validation
output to.}

\item{report_naming_format}{\link{character} a \link[glue]{glue} friendly string
of the naming structure of the output validation report. use \code{{package}}
for package name, \code{{version}} to record package version, and \code{{date}} to
capture the date the report was run.}

\item{username_list}{list of user objects created by {make_user}. Each user
contains entries for username, name, title, and role to be used for
documentation.}

\item{validation_files}{list of validation files: requirements, test cases and test code.
Validation report content will be populated using this list in order.}

\item{...}{additional information about the user to be passed into a list.}

\item{overwrite}{\verb{[boolean]}If a validation file exists, should it be overwritten?
Defaults to FALSE.}

\item{username}{computer username associated with the name and role}

\item{name}{full name of the user.}

\item{title}{title of the user.}

\item{role}{role of the user. Can be more than one.}

\item{type}{type of information to pull. select at least one: name, title, role}

\item{filename}{character vector containing filenames in order}
}
\value{
Used for side effect to create validation config file. Invisibly
returns TRUE on success.

a "user" object

Used for side effect of adding user information to validation config
file. Invisibly returns TRUE on success.

Used for side effect of removing user information to validation config
file. Invisibly returns TRUE on success.

a character vector length of types requested containing the user
information from the validation config file.

Used for side effect of adding validation file ordering to validation config
file. Invisibly returns TRUE on success.

Used for side effect of removing file ordering information from validation config
file. Invisibly returns TRUE on success.
}
\description{
Use a Validation Config File
Validation configuration for working/output directories, validation report
naming conventions, and tracking user information(username,name,title, role).
Provides a single location for setting behaviors.

Capture the information on a user that is going to be involved with validation

Add user information to the projects validation config file to make for easier documentation

Remove user information from the projects validation config file

Get recorded user information from the validation config file to make for easier documentation

Impose ordering of validation child files

Remove validation file orderingfrom the projects validation config file
}
\examples{
\dontrun{

vt_use_validation_config(pkg = ".",
                         working_dir = "vignettes",
                         output_dir  = "inst",
                         report_naming_format = "Validation_Report_{package}_v{version}_{date}"
                         username_list = list(
                           vt_user(
                             name = "test",
                             title = "test",
                             role = "tester",
                             username = "test"
                           )
                         ))

}


vt_user(
    username = "ellis",
    name = "Ellis Hughes",
    title = "Statistical Programmer",
    role = "Programmer")

\dontrun{

vt_use_validation_config(pkg = ".")

vt_add_user_to_config(
    username = "ellis",
    name = "Ellis Hughes",
    title = "Statistical Programmer",
    role = "Programmer")

}
\dontrun{

vt_use_validation_config(pkg = ".")

vt_add_user_to_config(
    username = "ellis",
    name = "Ellis Hughes",
    title = "Statistical Programmer",
    role = "Programmer")

vt_drop_user_from_config(username = "ellis")

}
\dontrun{

vt_use_validation_config(pkg = ".")

vt_add_user_to_config(
    username = "ellis",
    name = "Ellis Hughes",
    title = "Statistical Programmer",
    role = "Programmer")

vt_get_user_info(username = "ellis", type = c("name","title"))

}

\dontrun{

vt_use_validation_config(pkg = ".")

vt_add_file_to_config(filename = "myReqFile.Rmd")
}
\dontrun{

vt_use_validation_config(pkg = ".")

vt_add_file_to_config(filename = "myReqFile.Rmd")

vt_drop_file_from_config(filename = "myReqFile.Rmd")

}
}
